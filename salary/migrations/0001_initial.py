# Generated by Django 3.1.1 on 2020-11-24 11:47

from django.db import migrations, models
import django.db.models.deletion
import salary.models.core


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AclGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, db_column='slug', max_length=30)),
                ('name', models.CharField(db_column='name', max_length=30)),
            ],
            options={
                'db_table': 'sl_acl_groups',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=191)),
                ('username', models.CharField(db_column='username', max_length=191, unique=True)),
                ('password_hash', models.CharField(db_column='password_hash', max_length=200)),
                ('college_id', models.SmallIntegerField(db_column='college_id')),
                ('role_param_id', models.SmallIntegerField(db_column='role_param_id')),
                ('type', models.SmallIntegerField(db_column='type')),
                ('invalidate', models.SmallIntegerField(db_column='invalidate', default=0)),
            ],
            options={
                'db_table': 'sl_users',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=20)),
            ],
            options={
                'db_table': 'sl_colleges',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=100)),
                ('cnic', models.CharField(db_column='cnic', max_length=100)),
                ('bank_acc', models.CharField(db_column='bank_acc', max_length=100)),
                ('gender', models.SmallIntegerField(db_column='gender')),
                ('erp_number', models.IntegerField(db_column='erp_number')),
                ('init_date', models.DateField(db_column='init_date')),
            ],
            options={
                'db_table': 'sl_persons',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='RoleParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('w_agreed', models.SmallIntegerField(db_column='w_agreed')),
                ('x_rate', models.SmallIntegerField(db_column='x_rate')),
                ('category', models.SmallIntegerField(db_column='category')),
                ('salary', models.IntegerField(db_column='salary')),
                ('role', models.SmallIntegerField(db_column='role')),
                ('main', models.PositiveSmallIntegerField(db_column='main')),
                ('active', models.PositiveSmallIntegerField(db_column='active')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default='9999-12-31')),
                ('college', models.ForeignKey(db_column='college_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.college')),
                ('prev_role_param', models.OneToOneField(blank=True, db_column='prev_rp_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.roleparam')),
            ],
            options={
                'db_table': 'sl_role_params',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=15)),
                ('m_type', models.SmallIntegerField(db_column='m_type')),
                ('active', models.SmallIntegerField(db_column='active')),
                ('college', models.ForeignKey(db_column='college_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sections', to='salary.college')),
            ],
            options={
                'db_table': 'sl_sections',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=100)),
                ('status', models.PositiveSmallIntegerField(db_column='status')),
                ('transfer_from', models.PositiveIntegerField(blank=True, db_column='transfer_from_sid', null=True)),
                ('transfer_date', models.DateField()),
                ('main_role', models.SmallIntegerField(db_column='main_role')),
                ('has_faculty', models.SmallIntegerField(db_column='has_faculty')),
                ('college', models.ForeignKey(db_column='college_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='staffs', to='salary.college')),
                ('main_roleparam_obj', models.OneToOneField(blank=True, db_column='main_roleparam_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.roleparam')),
                ('person', models.ForeignKey(db_column='person_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.person')),
            ],
            options={
                'db_table': 'sl_staffs',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=20)),
            ],
            options={
                'db_table': 'sl_stations',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=20)),
            ],
            options={
                'db_table': 'sl_subjects',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(blank=True, null=True)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('main', models.PositiveSmallIntegerField()),
                ('lecture_count', models.PositiveSmallIntegerField()),
                ('college', models.ForeignKey(db_column='time_tables', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.college')),
            ],
            options={
                'db_table': 'sl_tbls',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='TimeTableCell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lecture_index', models.PositiveSmallIntegerField()),
                ('active', models.PositiveSmallIntegerField()),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default='9999-12-31')),
                ('section', models.ForeignKey(db_column='section_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.section')),
                ('table', models.ForeignKey(db_column='tbl_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='cells', to='salary.timetable')),
            ],
            options={
                'db_table': 'sl_tbl_cells',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='TimeTableLectureSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default='9999-12-31')),
                ('active', models.PositiveSmallIntegerField()),
                ('table', models.ForeignKey(db_column='tbl_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lecture_sets', to='salary.timetable')),
            ],
            options={
                'db_table': 'sl_tbl_lecsets',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='TimeTableLecture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lecture_index', models.IntegerField(db_column='lecture_index')),
                ('time_start', models.TimeField(db_column='time_start')),
                ('time_end', models.TimeField(db_column='time_end')),
                ('lecture_type', models.IntegerField(db_column='lecture_type')),
                ('table', models.ForeignKey(db_column='tbl_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lectures', to='salary.timetable')),
            ],
            options={
                'db_table': 'sl_tbl_lectures',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='TimeTableCellFragment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rep_policy', models.CharField(max_length=20)),
                ('cell', models.ForeignKey(db_column='tbl_cell_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fragments', to='salary.timetablecell')),
                ('staff', models.ForeignKey(db_column='staff_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.staff')),
                ('subject', models.ForeignKey(db_column='subject_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.subject')),
            ],
            options={
                'db_table': 'sl_tbl_cellfrags',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='TimeTable_SetLecture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lecture_index', models.IntegerField(db_column='lecture_index')),
                ('time_start', models.TimeField(db_column='time_start')),
                ('time_end', models.TimeField(db_column='time_end')),
                ('active', models.PositiveSmallIntegerField()),
                ('lecture_type', models.PositiveSmallIntegerField(db_column='lecture_type')),
                ('lectureset', models.ForeignKey(db_column='tbl_lecset_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lectures', to='salary.timetablelectureset')),
            ],
            options={
                'db_table': 'sl_tbl_set_lectures',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.AddField(
            model_name='roleparam',
            name='staff',
            field=models.ForeignKey(db_column='staff_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='role_params', to='salary.staff'),
        ),
        migrations.CreateModel(
            name='MergeSectionRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_section', models.ForeignKey(db_column='parent_section_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='merge_section_rows', to='salary.section')),
                ('target_section', models.ForeignKey(db_column='target_section_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.section')),
            ],
            options={
                'db_table': 'sl_merge_section_rows',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='LectureRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_date', models.DateField(db_column='m_date')),
                ('score', models.SmallIntegerField(db_column='score')),
                ('lecture_index', models.PositiveSmallIntegerField()),
                ('status', models.SmallIntegerField(db_column='status')),
                ('cell', models.ForeignKey(db_column='cell_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.timetablecell')),
                ('college', models.ForeignKey(db_column='college_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lecture_records', to='salary.college')),
                ('section', models.ForeignKey(db_column='section_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.section')),
            ],
            options={
                'db_table': 'sl_lecture_records',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_atnd', models.SmallIntegerField(db_column='allow_atnd')),
                ('remarks', models.CharField(blank=True, db_column='remarks', max_length=200, null=True)),
                ('date_start', models.DateField(db_column='date_start')),
                ('date_end', models.DateField(db_column='date_end')),
                ('college', models.ForeignKey(db_column='college_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.college')),
            ],
            options={
                'db_table': 'sl_holidays',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='Fixture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_date', models.DateField(db_column='m_date')),
                ('lecture_index', models.SmallIntegerField(db_column='lecture_index')),
                ('reason', models.SmallIntegerField(db_column='reason')),
                ('remarks', models.CharField(blank=True, db_column='remarks', max_length=200, null=True)),
                ('college', models.ForeignKey(db_column='college_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.college')),
                ('lecture_record', models.ForeignKey(db_column='lecture_record_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fixtures', to='salary.lecturerecord')),
                ('section', models.ForeignKey(db_column='section_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='section_id', to='salary.section')),
                ('staff', models.ForeignKey(db_column='staff_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.staff')),
            ],
            options={
                'db_table': 'sl_fixtures',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='FacSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main', models.IntegerField(db_column='main')),
                ('staff', models.ForeignKey(db_column='staff_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fac_subjects', to='salary.staff')),
                ('target_subject', models.ForeignKey(db_column='target_subject_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.subject')),
            ],
            options={
                'db_table': 'sl_fac_subjects',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.AddField(
            model_name='college',
            name='station',
            field=models.ForeignKey(db_column='station_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='colleges', to='salary.station'),
        ),
        migrations.CreateModel(
            name='AttendanceRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_date', models.DateField(db_column='m_date')),
                ('time_in', models.TimeField(blank=True, db_column='time_in', null=True)),
                ('time_out', models.TimeField(blank=True, db_column='time_out', null=True)),
                ('rec_time_in', models.TimeField(blank=True, db_column='rec_time_in', null=True)),
                ('rec_time_out', models.TimeField(blank=True, db_column='rec_time_out', null=True)),
                ('leave_status', models.SmallIntegerField(db_column='leave_status')),
                ('latest', models.SmallIntegerField(db_column='latest')),
                ('replaces_row_id', models.IntegerField(db_column='replaces_row_id')),
                ('college', models.ForeignKey(db_column='college_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.college')),
                ('staff', models.ForeignKey(db_column='staff_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.staff')),
            ],
            options={
                'db_table': 'sl_attendance_rows',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='AclUserPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revoke', models.PositiveSmallIntegerField(db_column='revoke')),
                ('perm_type', models.PositiveSmallIntegerField(db_column='perm_type')),
                ('perm', models.CharField(db_column='perm', max_length=50)),
                ('user', models.ForeignKey(db_column='user_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='acl_user_perms', to='salary.appuser')),
            ],
            options={
                'db_table': 'sl_acl_user_permissions',
            },
            bases=(models.Model, salary.models.core.RelatableModel),
        ),
        migrations.CreateModel(
            name='AclUserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(db_column='acl_group_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='salary.aclgroup')),
                ('user', models.ForeignKey(db_column='user_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='acl_user_groups', to='salary.appuser')),
            ],
            options={
                'db_table': 'sl_acl_user_groups',
            },
        ),
        migrations.CreateModel(
            name='AclGroupPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('perm_type', models.PositiveSmallIntegerField(db_column='perm_type')),
                ('perm', models.CharField(db_column='perm', max_length=50)),
                ('group', models.ForeignKey(db_column='acl_group_id', db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='perms', to='salary.aclgroup')),
            ],
            options={
                'db_table': 'sl_acl_group_premissons',
            },
        ),
    ]
